[{"C:\\Users\\rishi\\OneDrive\\Desktop\\react\\Egen\\JobSearchApp-React\\app\\src\\index.js":"1","C:\\Users\\rishi\\OneDrive\\Desktop\\react\\Egen\\JobSearchApp-React\\app\\src\\App.js":"2","C:\\Users\\rishi\\OneDrive\\Desktop\\react\\Egen\\JobSearchApp-React\\app\\src\\fetchjobs.js":"3","C:\\Users\\rishi\\OneDrive\\Desktop\\react\\Egen\\JobSearchApp-React\\app\\src\\components\\jobboard.js":"4","C:\\Users\\rishi\\OneDrive\\Desktop\\react\\Egen\\JobSearchApp-React\\app\\src\\components\\Theme.js":"5","C:\\Users\\rishi\\OneDrive\\Desktop\\react\\Egen\\JobSearchApp-React\\app\\src\\components\\ToggleIcon.js":"6"},{"size":206,"mtime":1606934490438,"results":"7","hashOfConfig":"8"},{"size":2018,"mtime":1607358727590,"results":"9","hashOfConfig":"8"},{"size":1640,"mtime":1606966986738,"results":"10","hashOfConfig":"8"},{"size":2391,"mtime":1607357112514,"results":"11","hashOfConfig":"8"},{"size":955,"mtime":1607335962097,"results":"12","hashOfConfig":"8"},{"size":1344,"mtime":1607358429203,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1aj99cm",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\rishi\\OneDrive\\Desktop\\react\\Egen\\JobSearchApp-React\\app\\src\\index.js",[],["28","29"],"C:\\Users\\rishi\\OneDrive\\Desktop\\react\\Egen\\JobSearchApp-React\\app\\src\\App.js",["30"],"C:\\Users\\rishi\\OneDrive\\Desktop\\react\\Egen\\JobSearchApp-React\\app\\src\\fetchjobs.js",[],"C:\\Users\\rishi\\OneDrive\\Desktop\\react\\Egen\\JobSearchApp-React\\app\\src\\components\\jobboard.js",["31","32","33","34"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nexport default function JobBoard({job}){\r\n    const jobArray = job;\r\n    const classes = useStyles()\r\n    const dot = <span className={classes.bullet}>â€¢</span>\r\n\r\n    // var comapnyLogo = {jobArray.company_logo}\r\n   \r\n    return(\r\n        <div className={classes.gridRoot}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Card className={classes.root} >\r\n                        <CardContent>\r\n                            <Typography variant=\"h3\" component=\"h4\">\r\n                                {jobArray.company}\r\n                            </Typography>\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                                {jobArray.title}\r\n                                {jobArray.location} {dot} {jobArray.type}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                            <Button size=\"small\" href={jobArray.url}>Read More...</Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    gridRoot: {\r\n        flexGrow: 1\r\n    },\r\n    root: {\r\n        flex: 1, \r\n        justifyContent: \"centre\",\r\n        minWidth: 75,\r\n        margin: '20px 10px 20px 10px'\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        body : '#5865E0',\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    }\r\n\r\n  })\r\n);\r\n","C:\\Users\\rishi\\OneDrive\\Desktop\\react\\Egen\\JobSearchApp-React\\app\\src\\components\\Theme.js",[],"C:\\Users\\rishi\\OneDrive\\Desktop\\react\\Egen\\JobSearchApp-React\\app\\src\\components\\ToggleIcon.js",["35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":6,"column":10,"nodeType":"42","messageId":"43","endLine":6,"endColumn":16},{"ruleId":"40","severity":1,"message":"44","line":6,"column":8,"nodeType":"42","messageId":"43","endLine":6,"endColumn":18},{"ruleId":"40","severity":1,"message":"45","line":7,"column":8,"nodeType":"42","messageId":"43","endLine":7,"endColumn":17},{"ruleId":"40","severity":1,"message":"46","line":10,"column":8,"nodeType":"42","messageId":"43","endLine":10,"endColumn":13},{"ruleId":"40","severity":1,"message":"47","line":12,"column":8,"nodeType":"42","messageId":"43","endLine":12,"endColumn":14},{"ruleId":"40","severity":1,"message":"48","line":7,"column":11,"nodeType":"42","messageId":"43","endLine":7,"endColumn":18},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'Toggle' is defined but never used.","Identifier","unusedVar","'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'Paper' is defined but never used.","'Avatar' is defined but never used.","'isLight' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]